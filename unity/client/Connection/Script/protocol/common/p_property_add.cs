using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;

public class p_property_add:GameNetInfo{
	//fields
	public int power = 0;
	public int agile = 0;
	public int brain = 0;
	public int vitality = 0;
	public int spirit = 0;
	public int min_physic_att = 0;
	public int max_physic_att = 0;
	public int min_magic_att = 0;
	public int max_magic_att = 0;
	public int physic_def = 0;
	public int magic_def = 0;
	public int blood = 0;
	public int magic = 0;
	public int physic_att_rate = 0;
	public int magic_att_rate = 0;
	public int physic_def_rate = 0;
	public int magic_def_rate = 0;
	public int blood_rate = 0;
	public int magic_rate = 0;
	public int blood_resume_speed = 0;
	public int magic_resume_speed = 0;
	public int double_attack = 0;
	public int lucky = 0;
	public int move_speed = 0;
	public int attack_speed = 0;
	public int miss = 0;
	public int no_defence = 0;
	public int main_property = 0;
	public int dizzy = 0;
	public int poisoning = 0;
	public int freeze = 0;
	public int hurt = 0;
	public int hurt_shift = 0;
	public int poisoning_resist = 0;
	public int dizzy_resist = 0;
	public int freeze_resist = 0;
	public int phy_anti = 0;
	public int magic_anti = 0;
	public int hurt_rebound = 0;
	public int hit_rate = 0;
	public int block = 0;
	public int wreck = 0;
	public int tough = 0;
	public int vigour = 0;
	public int week = 0;
	public int molder = 0;
	public int hunger = 0;
	public int bless = 0;
	public int crit = 0;
	public int counter = 0;
	public int combos = 0;
	public int bloodline = 0;
	//special field
	private short __bytesLen;

	//fill method for toc
	public override void fill2c(ByteArray ba){
		this.power = ba.ReadInt();
		this.agile = ba.ReadInt();
		this.brain = ba.ReadInt();
		this.vitality = ba.ReadInt();
		this.spirit = ba.ReadInt();
		this.min_physic_att = ba.ReadInt();
		this.max_physic_att = ba.ReadInt();
		this.min_magic_att = ba.ReadInt();
		this.max_magic_att = ba.ReadInt();
		this.physic_def = ba.ReadInt();
		this.magic_def = ba.ReadInt();
		this.blood = ba.ReadInt();
		this.magic = ba.ReadInt();
		this.physic_att_rate = ba.ReadInt();
		this.magic_att_rate = ba.ReadInt();
		this.physic_def_rate = ba.ReadInt();
		this.magic_def_rate = ba.ReadInt();
		this.blood_rate = ba.ReadInt();
		this.magic_rate = ba.ReadInt();
		this.blood_resume_speed = ba.ReadInt();
		this.magic_resume_speed = ba.ReadInt();
		this.double_attack = ba.ReadInt();
		this.lucky = ba.ReadInt();
		this.move_speed = ba.ReadInt();
		this.attack_speed = ba.ReadInt();
		this.miss = ba.ReadInt();
		this.no_defence = ba.ReadInt();
		this.main_property = ba.ReadInt();
		this.dizzy = ba.ReadInt();
		this.poisoning = ba.ReadInt();
		this.freeze = ba.ReadInt();
		this.hurt = ba.ReadInt();
		this.hurt_shift = ba.ReadInt();
		this.poisoning_resist = ba.ReadInt();
		this.dizzy_resist = ba.ReadInt();
		this.freeze_resist = ba.ReadInt();
		this.phy_anti = ba.ReadInt();
		this.magic_anti = ba.ReadInt();
		this.hurt_rebound = ba.ReadInt();
		this.hit_rate = ba.ReadInt();
		this.block = ba.ReadInt();
		this.wreck = ba.ReadInt();
		this.tough = ba.ReadInt();
		this.vigour = ba.ReadInt();
		this.week = ba.ReadInt();
		this.molder = ba.ReadInt();
		this.hunger = ba.ReadInt();
		this.bless = ba.ReadInt();
		this.crit = ba.ReadInt();
		this.counter = ba.ReadInt();
		this.combos = ba.ReadInt();
		this.bloodline = ba.ReadInt();
	}
	//fill method for tos
	public override void fill2s(ByteArray ba){
		ba.WriteInt(this.power);
		ba.WriteInt(this.agile);
		ba.WriteInt(this.brain);
		ba.WriteInt(this.vitality);
		ba.WriteInt(this.spirit);
		ba.WriteInt(this.min_physic_att);
		ba.WriteInt(this.max_physic_att);
		ba.WriteInt(this.min_magic_att);
		ba.WriteInt(this.max_magic_att);
		ba.WriteInt(this.physic_def);
		ba.WriteInt(this.magic_def);
		ba.WriteInt(this.blood);
		ba.WriteInt(this.magic);
		ba.WriteInt(this.physic_att_rate);
		ba.WriteInt(this.magic_att_rate);
		ba.WriteInt(this.physic_def_rate);
		ba.WriteInt(this.magic_def_rate);
		ba.WriteInt(this.blood_rate);
		ba.WriteInt(this.magic_rate);
		ba.WriteInt(this.blood_resume_speed);
		ba.WriteInt(this.magic_resume_speed);
		ba.WriteInt(this.double_attack);
		ba.WriteInt(this.lucky);
		ba.WriteInt(this.move_speed);
		ba.WriteInt(this.attack_speed);
		ba.WriteInt(this.miss);
		ba.WriteInt(this.no_defence);
		ba.WriteInt(this.main_property);
		ba.WriteInt(this.dizzy);
		ba.WriteInt(this.poisoning);
		ba.WriteInt(this.freeze);
		ba.WriteInt(this.hurt);
		ba.WriteInt(this.hurt_shift);
		ba.WriteInt(this.poisoning_resist);
		ba.WriteInt(this.dizzy_resist);
		ba.WriteInt(this.freeze_resist);
		ba.WriteInt(this.phy_anti);
		ba.WriteInt(this.magic_anti);
		ba.WriteInt(this.hurt_rebound);
		ba.WriteInt(this.hit_rate);
		ba.WriteInt(this.block);
		ba.WriteInt(this.wreck);
		ba.WriteInt(this.tough);
		ba.WriteInt(this.vigour);
		ba.WriteInt(this.week);
		ba.WriteInt(this.molder);
		ba.WriteInt(this.hunger);
		ba.WriteInt(this.bless);
		ba.WriteInt(this.crit);
		ba.WriteInt(this.counter);
		ba.WriteInt(this.combos);
		ba.WriteInt(this.bloodline);
	}
}
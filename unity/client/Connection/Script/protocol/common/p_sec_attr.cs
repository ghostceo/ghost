using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;

public class p_sec_attr:GameNetInfo{
	//fields
	public int max_hp = 0;
	public int max_mp = 0;
	public int max_attack = 0;
	public int min_attack = 0;
	public int attack_rate = 0;
	public int defence = 0;
	public int no_defence = 0;
	public int defence_rate = 0;
	public int phy_defence = 0;
	public int phy_defence_rate = 0;
	public int magic_defence = 0;
	public int magic_defence_rate = 0;
	public int dex_defence = 0;
	public int dex_defence_rate = 0;
	public int phy_anti = 0;
	public int magic_anti = 0;
	public int dex_anti = 0;
	public int no_phy_anti = 0;
	public int no_magic_anti = 0;
	public int no_dex_anti = 0;
	public int anti = 0;
	public int no_anti = 0;
	public int double_atk = 0;
	public int double_atk_rate = 0;
	public int double_atk_hurt = 0;
	public int double_atk_hurt_reduce = 0;
	public int tough = 0;
	public int tough_rate = 0;
	public int hit = 0;
	public int hit_rate = 0;
	public int miss = 0;
	public int miss_rate = 0;
	public int hurt_rate = 0;
	public int hurt_rate_reduce = 0;
	public int block = 0;
	public int wreck = 0;
	public int block_hurt_reduce = 0;
	public int no_block_hurt = 0;
	public int hurt_absorb = 0;
	public int hurt_absorb_resist = 0;
	public int hp_recover = 0;
	public int mp_recover = 0;
	public int stop = 0;
	public int stop_resist = 0;
	public int dizzy = 0;
	public int dizzy_resist = 0;
	public int poisoning = 0;
	public int poisoning_resist = 0;
	public int week = 0;
	public int week_resist = 0;
	public int freeze = 0;
	public int freeze_resist = 0;
	public int silent = 0;
	public int silent_resist = 0;
	public int hurt_rebound = 0;
	public int hurt_rate_to_monster = 0;
	public int hurt_rate_to_boss = 0;
	public int hurt_reduce_from_boss = 0;
	public int kill_monster_silver_rate = 0;
	public int kill_monster_exp_rate = 0;
	public int add_drop_rate = 0;
	public int add_advance_drop_rate = 0;
	public int first_strike = 0;
	public int atk_mp_recover = 0;
	public int be_atk_mp_recover = 0;
	public int fight_reduce_def = 0;
	public int fight_add_phy_def = 0;
	public int fight_add_dex_def = 0;
	public int fight_add_magic_def = 0;
	//special field
	private short __bytesLen;

	//fill method for toc
	public override void fill2c(ByteArray ba){
		this.max_hp = ba.ReadInt();
		this.max_mp = ba.ReadInt();
		this.max_attack = ba.ReadInt();
		this.min_attack = ba.ReadInt();
		this.attack_rate = ba.ReadInt();
		this.defence = ba.ReadInt();
		this.no_defence = ba.ReadInt();
		this.defence_rate = ba.ReadInt();
		this.phy_defence = ba.ReadInt();
		this.phy_defence_rate = ba.ReadInt();
		this.magic_defence = ba.ReadInt();
		this.magic_defence_rate = ba.ReadInt();
		this.dex_defence = ba.ReadInt();
		this.dex_defence_rate = ba.ReadInt();
		this.phy_anti = ba.ReadInt();
		this.magic_anti = ba.ReadInt();
		this.dex_anti = ba.ReadInt();
		this.no_phy_anti = ba.ReadInt();
		this.no_magic_anti = ba.ReadInt();
		this.no_dex_anti = ba.ReadInt();
		this.anti = ba.ReadInt();
		this.no_anti = ba.ReadInt();
		this.double_atk = ba.ReadInt();
		this.double_atk_rate = ba.ReadInt();
		this.double_atk_hurt = ba.ReadInt();
		this.double_atk_hurt_reduce = ba.ReadInt();
		this.tough = ba.ReadInt();
		this.tough_rate = ba.ReadInt();
		this.hit = ba.ReadInt();
		this.hit_rate = ba.ReadInt();
		this.miss = ba.ReadInt();
		this.miss_rate = ba.ReadInt();
		this.hurt_rate = ba.ReadInt();
		this.hurt_rate_reduce = ba.ReadInt();
		this.block = ba.ReadInt();
		this.wreck = ba.ReadInt();
		this.block_hurt_reduce = ba.ReadInt();
		this.no_block_hurt = ba.ReadInt();
		this.hurt_absorb = ba.ReadInt();
		this.hurt_absorb_resist = ba.ReadInt();
		this.hp_recover = ba.ReadInt();
		this.mp_recover = ba.ReadInt();
		this.stop = ba.ReadInt();
		this.stop_resist = ba.ReadInt();
		this.dizzy = ba.ReadInt();
		this.dizzy_resist = ba.ReadInt();
		this.poisoning = ba.ReadInt();
		this.poisoning_resist = ba.ReadInt();
		this.week = ba.ReadInt();
		this.week_resist = ba.ReadInt();
		this.freeze = ba.ReadInt();
		this.freeze_resist = ba.ReadInt();
		this.silent = ba.ReadInt();
		this.silent_resist = ba.ReadInt();
		this.hurt_rebound = ba.ReadInt();
		this.hurt_rate_to_monster = ba.ReadInt();
		this.hurt_rate_to_boss = ba.ReadInt();
		this.hurt_reduce_from_boss = ba.ReadInt();
		this.kill_monster_silver_rate = ba.ReadInt();
		this.kill_monster_exp_rate = ba.ReadInt();
		this.add_drop_rate = ba.ReadInt();
		this.add_advance_drop_rate = ba.ReadInt();
		this.first_strike = ba.ReadInt();
		this.atk_mp_recover = ba.ReadInt();
		this.be_atk_mp_recover = ba.ReadInt();
		this.fight_reduce_def = ba.ReadInt();
		this.fight_add_phy_def = ba.ReadInt();
		this.fight_add_dex_def = ba.ReadInt();
		this.fight_add_magic_def = ba.ReadInt();
	}
	//fill method for tos
	public override void fill2s(ByteArray ba){
		ba.WriteInt(this.max_hp);
		ba.WriteInt(this.max_mp);
		ba.WriteInt(this.max_attack);
		ba.WriteInt(this.min_attack);
		ba.WriteInt(this.attack_rate);
		ba.WriteInt(this.defence);
		ba.WriteInt(this.no_defence);
		ba.WriteInt(this.defence_rate);
		ba.WriteInt(this.phy_defence);
		ba.WriteInt(this.phy_defence_rate);
		ba.WriteInt(this.magic_defence);
		ba.WriteInt(this.magic_defence_rate);
		ba.WriteInt(this.dex_defence);
		ba.WriteInt(this.dex_defence_rate);
		ba.WriteInt(this.phy_anti);
		ba.WriteInt(this.magic_anti);
		ba.WriteInt(this.dex_anti);
		ba.WriteInt(this.no_phy_anti);
		ba.WriteInt(this.no_magic_anti);
		ba.WriteInt(this.no_dex_anti);
		ba.WriteInt(this.anti);
		ba.WriteInt(this.no_anti);
		ba.WriteInt(this.double_atk);
		ba.WriteInt(this.double_atk_rate);
		ba.WriteInt(this.double_atk_hurt);
		ba.WriteInt(this.double_atk_hurt_reduce);
		ba.WriteInt(this.tough);
		ba.WriteInt(this.tough_rate);
		ba.WriteInt(this.hit);
		ba.WriteInt(this.hit_rate);
		ba.WriteInt(this.miss);
		ba.WriteInt(this.miss_rate);
		ba.WriteInt(this.hurt_rate);
		ba.WriteInt(this.hurt_rate_reduce);
		ba.WriteInt(this.block);
		ba.WriteInt(this.wreck);
		ba.WriteInt(this.block_hurt_reduce);
		ba.WriteInt(this.no_block_hurt);
		ba.WriteInt(this.hurt_absorb);
		ba.WriteInt(this.hurt_absorb_resist);
		ba.WriteInt(this.hp_recover);
		ba.WriteInt(this.mp_recover);
		ba.WriteInt(this.stop);
		ba.WriteInt(this.stop_resist);
		ba.WriteInt(this.dizzy);
		ba.WriteInt(this.dizzy_resist);
		ba.WriteInt(this.poisoning);
		ba.WriteInt(this.poisoning_resist);
		ba.WriteInt(this.week);
		ba.WriteInt(this.week_resist);
		ba.WriteInt(this.freeze);
		ba.WriteInt(this.freeze_resist);
		ba.WriteInt(this.silent);
		ba.WriteInt(this.silent_resist);
		ba.WriteInt(this.hurt_rebound);
		ba.WriteInt(this.hurt_rate_to_monster);
		ba.WriteInt(this.hurt_rate_to_boss);
		ba.WriteInt(this.hurt_reduce_from_boss);
		ba.WriteInt(this.kill_monster_silver_rate);
		ba.WriteInt(this.kill_monster_exp_rate);
		ba.WriteInt(this.add_drop_rate);
		ba.WriteInt(this.add_advance_drop_rate);
		ba.WriteInt(this.first_strike);
		ba.WriteInt(this.atk_mp_recover);
		ba.WriteInt(this.be_atk_mp_recover);
		ba.WriteInt(this.fight_reduce_def);
		ba.WriteInt(this.fight_add_phy_def);
		ba.WriteInt(this.fight_add_dex_def);
		ba.WriteInt(this.fight_add_magic_def);
	}
}